{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SM\\\\Contacts\\\\Desktop\\\\Try Project\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\n// App.jsx\n/*import React from \"react\";\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\r\nimport RegisterPage from \"./components/RegisterPage\";\r\nimport LoginPage from \"./components/LoginPage\";\r\nimport LandingPage from \"./components/LandingPage\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        {/* Show Register first \r\n       /* <Route path=\"/\" element={<Navigate to=\"/register\" />} />\r\n        \r\n        <Route path=\"/register\" element={<RegisterPage />} />\r\n        <Route path=\"/login\" element={<LoginPage />} />\r\n        <Route path=\"/landing\" element={<LandingPage />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;*/\n/*import React, { useState } from \"react\";\r\nimport LandingPage from \"./components/LandingPage\";\r\nimport LoginPage from \"./components/LoginPage\";\r\nimport RegisterPage from \"./components/RegisterPage\";\r\n\r\nfunction App() {\r\n  const [currentPage, setCurrentPage] = useState(\"landing\");\r\n\r\n  const handleRegister = (userData) => {\r\n    console.log(\"User registered:\", userData);\r\n    alert(`Welcome, ${userData.username}! Registration successful.`);\r\n    setCurrentPage(\"login\"); // redirect to login after register\r\n  };\r\n\r\n  const handleLogin = (userData) => {\r\n    console.log(\"User logged in:\", userData);\r\n    alert(`Hello, ${userData.username}! You are logged in.`);\r\n    setCurrentPage(\"landing\"); // go back to landing after login\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {currentPage === \"landing\" && (\r\n        <LandingPage onNavigate={setCurrentPage} />\r\n      )}\r\n      {currentPage === \"login\" && (\r\n        <LoginPage onLogin={handleLogin} onNavigate={setCurrentPage} />\r\n      )}\r\n      {currentPage === \"register\" && (\r\n        <RegisterPage onRegister={handleRegister} onNavigate={setCurrentPage} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;*/\n\n/*import { Routes, Route} from \"react-router-dom\";\r\nimport LandingPage from \"./components/LandingPage\";\r\nimport LoginPage from \"./components/LoginPage\";\r\nimport RegisterPage from \"./components/RegisterPage\";\r\nimport RentPage from \"./components/RentPage\";\r\nimport PartTimeJobPage from \"./components/ParttimeJob\";\r\nimport JobResults from \"./components/JobResults\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Routes>\r\n      <Route path=\"/\" element={<LandingPage />} />\r\n      <Route path=\"/login\" element={<LoginPage />} />\r\n      <Route path=\"/register\" element={<RegisterPage />} />\r\n      <Route path=\"/rent\" element={<RentPage />} />\r\n      <Route path=\"/part-time-jobs\" element={<ParttimeJob />} />\r\n      <Route path=\"/jobs-results\" element={<JobResults />} />\r\n    </Routes>\r\n  );\r\n}\r\n\r\nexport default App;*/\n\n// App.jsx\n/*import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\r\nimport LandingPage from \"./components/LandingPage\";\r\nimport LoginPage from \"./components/LoginPage\";\r\nimport RegisterPage from \"./components/RegisterPage\";\r\n\r\nfunction App() {\r\n  const [users, setUsers] = useState([]);\r\n  const [loggedInUser, setLoggedInUser] = useState(null);\r\n\r\n  const handleRegister = (newUser) => {\r\n    setUsers((prev) => [...prev, newUser]);\r\n    console.log(\"User Registered:\", newUser);\r\n  };\r\n\r\n  const handleLogin = (email, password) => {\r\n    const user = users.find((u) => u.email === email && u.password === password);\r\n    if (user) {\r\n      setLoggedInUser(user);\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    setLoggedInUser(null);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route\r\n          path=\"/\"\r\n          element={\r\n            loggedInUser ? (\r\n              <LandingPage user={loggedInUser} onLogout={handleLogout} />\r\n            ) : (\r\n              <Navigate to=\"/login\" />\r\n            )\r\n          }\r\n        />\r\n        <Route path=\"/login\" element={<LoginPage onLogin={handleLogin} />} />\r\n        <Route path=\"/register\" element={<RegisterPage onRegister={handleRegister} />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;*/\n\nimport React, { useState, useEffect } from \"react\";\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport RegisterPage from \"./components/RegisterPage\";\nimport LoginPage from \"./components/LoginPage\";\nimport LandingPage from \"./components/LandingPage\";\nimport RentPage from \"./components/RentPage\";\nimport RentResults from \"./components/RentResults\";\nimport ParttimeJob from \"./components/ParttimeJob\";\nimport JobResults from \"./components/JobResults\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  // persist logged-in user across refresh\n  const [loggedInUser, setLoggedInUser] = useState(() => {\n    try {\n      return JSON.parse(localStorage.getItem(\"loggedInUser\")) || null;\n    } catch {\n      return null;\n    }\n  });\n\n  // keep localStorage in sync\n  useEffect(() => {\n    if (loggedInUser) localStorage.setItem(\"loggedInUser\", JSON.stringify(loggedInUser));else localStorage.removeItem(\"loggedInUser\");\n  }, [loggedInUser]);\n\n  // Register handler: save user to \"users\" list in localStorage (password stored in plain text â€” demo only)\n  const handleRegister = user => {\n    const users = JSON.parse(localStorage.getItem(\"users\") || \"[]\");\n    // simple duplicate check by email\n    if (users.some(u => u.email === user.email)) {\n      return {\n        ok: false,\n        message: \"Email already registered\"\n      };\n    }\n    users.push(user);\n    localStorage.setItem(\"users\", JSON.stringify(users));\n    return {\n      ok: true\n    };\n  };\n\n  // Login handler: check user list\n  const handleLogin = (email, password) => {\n    const users = JSON.parse(localStorage.getItem(\"users\") || \"[]\");\n    const user = users.find(u => u.email === email && u.password === password);\n    if (user) {\n      setLoggedInUser(user);\n      return {\n        ok: true,\n        user\n      };\n    }\n    return {\n      ok: false,\n      message: \"Invalid credentials\"\n    };\n  };\n  const handleLogout = () => {\n    setLoggedInUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(RegisterPage, {\n        onRegister: handleRegister\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/login\",\n      element: /*#__PURE__*/_jsxDEV(LoginPage, {\n        onLogin: handleLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/landing\",\n      element: loggedInUser ? /*#__PURE__*/_jsxDEV(LandingPage, {\n        user: loggedInUser,\n        onLogout: handleLogout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/rent\",\n      element: loggedInUser ? /*#__PURE__*/_jsxDEV(RentPage, {\n        user: loggedInUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 33\n      }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 68\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/rent-results\",\n      element: loggedInUser ? /*#__PURE__*/_jsxDEV(RentResults, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 33\n      }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 51\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/ParttimeJob\",\n      element: loggedInUser ? /*#__PURE__*/_jsxDEV(ParttimeJob, {\n        user: loggedInUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 33\n      }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 71\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/job-results\",\n      element: loggedInUser ? /*#__PURE__*/_jsxDEV(JobResults, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 33\n      }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 50\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"*\",\n      element: /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QFObQmTJwyyBfvcQriYSIGdeh3E=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Routes","Route","Navigate","RegisterPage","LoginPage","LandingPage","RentPage","RentResults","ParttimeJob","JobResults","jsxDEV","_jsxDEV","App","_s","loggedInUser","setLoggedInUser","JSON","parse","localStorage","getItem","setItem","stringify","removeItem","handleRegister","user","users","some","u","email","ok","message","push","handleLogin","password","find","handleLogout","children","path","element","onRegister","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","onLogout","to","_c","$RefreshReg$"],"sources":["C:/Users/SM/Contacts/Desktop/Try Project/src/App.jsx"],"sourcesContent":["\r\n// App.jsx\r\n/*import React from \"react\";\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\r\nimport RegisterPage from \"./components/RegisterPage\";\r\nimport LoginPage from \"./components/LoginPage\";\r\nimport LandingPage from \"./components/LandingPage\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        {/* Show Register first \r\n       /* <Route path=\"/\" element={<Navigate to=\"/register\" />} />\r\n        \r\n        <Route path=\"/register\" element={<RegisterPage />} />\r\n        <Route path=\"/login\" element={<LoginPage />} />\r\n        <Route path=\"/landing\" element={<LandingPage />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;*/\r\n/*import React, { useState } from \"react\";\r\nimport LandingPage from \"./components/LandingPage\";\r\nimport LoginPage from \"./components/LoginPage\";\r\nimport RegisterPage from \"./components/RegisterPage\";\r\n\r\nfunction App() {\r\n  const [currentPage, setCurrentPage] = useState(\"landing\");\r\n\r\n  const handleRegister = (userData) => {\r\n    console.log(\"User registered:\", userData);\r\n    alert(`Welcome, ${userData.username}! Registration successful.`);\r\n    setCurrentPage(\"login\"); // redirect to login after register\r\n  };\r\n\r\n  const handleLogin = (userData) => {\r\n    console.log(\"User logged in:\", userData);\r\n    alert(`Hello, ${userData.username}! You are logged in.`);\r\n    setCurrentPage(\"landing\"); // go back to landing after login\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {currentPage === \"landing\" && (\r\n        <LandingPage onNavigate={setCurrentPage} />\r\n      )}\r\n      {currentPage === \"login\" && (\r\n        <LoginPage onLogin={handleLogin} onNavigate={setCurrentPage} />\r\n      )}\r\n      {currentPage === \"register\" && (\r\n        <RegisterPage onRegister={handleRegister} onNavigate={setCurrentPage} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;*/\r\n\r\n/*import { Routes, Route} from \"react-router-dom\";\r\nimport LandingPage from \"./components/LandingPage\";\r\nimport LoginPage from \"./components/LoginPage\";\r\nimport RegisterPage from \"./components/RegisterPage\";\r\nimport RentPage from \"./components/RentPage\";\r\nimport PartTimeJobPage from \"./components/ParttimeJob\";\r\nimport JobResults from \"./components/JobResults\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Routes>\r\n      <Route path=\"/\" element={<LandingPage />} />\r\n      <Route path=\"/login\" element={<LoginPage />} />\r\n      <Route path=\"/register\" element={<RegisterPage />} />\r\n      <Route path=\"/rent\" element={<RentPage />} />\r\n      <Route path=\"/part-time-jobs\" element={<ParttimeJob />} />\r\n      <Route path=\"/jobs-results\" element={<JobResults />} />\r\n    </Routes>\r\n  );\r\n}\r\n\r\nexport default App;*/\r\n\r\n// App.jsx\r\n/*import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\r\nimport LandingPage from \"./components/LandingPage\";\r\nimport LoginPage from \"./components/LoginPage\";\r\nimport RegisterPage from \"./components/RegisterPage\";\r\n\r\nfunction App() {\r\n  const [users, setUsers] = useState([]);\r\n  const [loggedInUser, setLoggedInUser] = useState(null);\r\n\r\n  const handleRegister = (newUser) => {\r\n    setUsers((prev) => [...prev, newUser]);\r\n    console.log(\"User Registered:\", newUser);\r\n  };\r\n\r\n  const handleLogin = (email, password) => {\r\n    const user = users.find((u) => u.email === email && u.password === password);\r\n    if (user) {\r\n      setLoggedInUser(user);\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    setLoggedInUser(null);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route\r\n          path=\"/\"\r\n          element={\r\n            loggedInUser ? (\r\n              <LandingPage user={loggedInUser} onLogout={handleLogout} />\r\n            ) : (\r\n              <Navigate to=\"/login\" />\r\n            )\r\n          }\r\n        />\r\n        <Route path=\"/login\" element={<LoginPage onLogin={handleLogin} />} />\r\n        <Route path=\"/register\" element={<RegisterPage onRegister={handleRegister} />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;*/\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Routes, Route, Navigate } from \"react-router-dom\";\r\n\r\nimport RegisterPage from \"./components/RegisterPage\";\r\nimport LoginPage from \"./components/LoginPage\";\r\nimport LandingPage from \"./components/LandingPage\";\r\nimport RentPage from \"./components/RentPage\";\r\nimport RentResults from \"./components/RentResults\";\r\n\r\nimport ParttimeJob from \"./components/ParttimeJob\";\r\nimport JobResults from \"./components/JobResults\";\r\n\r\nexport default function App() {\r\n  // persist logged-in user across refresh\r\n  const [loggedInUser, setLoggedInUser] = useState(() => {\r\n    try {\r\n      return JSON.parse(localStorage.getItem(\"loggedInUser\")) || null;\r\n    } catch {\r\n      return null;\r\n    }\r\n  });\r\n\r\n  // keep localStorage in sync\r\n  useEffect(() => {\r\n    if (loggedInUser) localStorage.setItem(\"loggedInUser\", JSON.stringify(loggedInUser));\r\n    else localStorage.removeItem(\"loggedInUser\");\r\n  }, [loggedInUser]);\r\n\r\n  // Register handler: save user to \"users\" list in localStorage (password stored in plain text â€” demo only)\r\n  const handleRegister = (user) => {\r\n    const users = JSON.parse(localStorage.getItem(\"users\") || \"[]\");\r\n    // simple duplicate check by email\r\n    if (users.some((u) => u.email === user.email)) {\r\n      return { ok: false, message: \"Email already registered\" };\r\n    }\r\n    users.push(user);\r\n    localStorage.setItem(\"users\", JSON.stringify(users));\r\n    return { ok: true };\r\n  };\r\n\r\n  // Login handler: check user list\r\n  const handleLogin = (email, password) => {\r\n    const users = JSON.parse(localStorage.getItem(\"users\") || \"[]\");\r\n    const user = users.find((u) => u.email === email && u.password === password);\r\n    if (user) {\r\n      setLoggedInUser(user);\r\n      return { ok: true, user };\r\n    }\r\n    return { ok: false, message: \"Invalid credentials\" };\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    setLoggedInUser(null);\r\n  };\r\n\r\n  return (\r\n    <Routes>\r\n      {/* Register is first page */}\r\n      <Route path=\"/\" element={<RegisterPage onRegister={handleRegister} />} />\r\n\r\n      {/* Login */}\r\n      <Route path=\"/login\" element={<LoginPage onLogin={handleLogin} />} />\r\n\r\n      {/* Protected routes: landing, rent, part-time, results */}\r\n      <Route\r\n        path=\"/landing\"\r\n        element={\r\n          loggedInUser ? (\r\n            <LandingPage user={loggedInUser} onLogout={handleLogout} />\r\n          ) : (\r\n            <Navigate to=\"/login\" />\r\n          )\r\n        }\r\n      />\r\n\r\n      <Route\r\n        path=\"/rent\"\r\n        element={loggedInUser ? <RentPage user={loggedInUser} /> : <Navigate to=\"/login\" />}\r\n      />\r\n      <Route\r\n        path=\"/rent-results\"\r\n        element={loggedInUser ? <RentResults /> : <Navigate to=\"/login\" />}\r\n      />\r\n\r\n      <Route\r\n        path=\"/ParttimeJob\"\r\n        element={loggedInUser ? <ParttimeJob user={loggedInUser} /> : <Navigate to=\"/login\" />}\r\n      />\r\n      <Route\r\n        path=\"/job-results\"\r\n        element={loggedInUser ? <JobResults /> : <Navigate to=\"/login\" />}\r\n      />\r\n\r\n      {/* Fallback */}\r\n      <Route path=\"*\" element={<Navigate to=\"/\" />} />\r\n    </Routes>\r\n  );\r\n}\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}